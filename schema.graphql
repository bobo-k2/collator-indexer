type Collator @entity {

  id: ID! #id is a required field

  name: String

  blocksProduced: Int!

  blocksMissed: Int!
}

type Day @entity {
  id: ID!

  firstBlock: BigInt!

  lastBlock: BigInt
}

type BlockProduction @entity {
  id: ID!

  collator: Collator!

  day: Day

  blocksProduced: Int!

  blocksMissed: Int!

  avgBlockProductionOffset: Float!
}

type Block @entity {
  id: ID! # block number

  collator: Collator

  extrinsicsCount: Int!

  weight: BigInt!

  weightRatio: Float!
}

enum BlockProductionStatus {
  Produced,
  Missed
}

type BlockRealTimeData @entity {
  id: ID! #Random hash
  timestamp: BigInt! @index #Block creation timestamp
  blockNumber: BigInt!
  collatorAddress: String! @index #Address of collator which produced/missed block
  status: BlockProductionStatus! #status of block production (missed/produced)
  extrinsicsCount: Int #Number of extrinsics in produced block
  weight: BigInt #Total produced block weight
  weightRatio: Float #Produced block fill ratio
}